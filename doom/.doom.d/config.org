#+TITLE: Doom Config
#+PROPERTY: header-args:elisp :tangle config.el :cache yes :results silent :padline no
#+EXPORT_FILE_NAME: README.md
#+STARTUP: content
#+options: toc:3

# Local Variables:
# org-confirm-babel-evaluate: nil
# eval: (add-hook 'after-save-hook (lambda ()(org-babel-tangle)) nil t)
# End:

#+begin_src elisp
;;; config.el --- -*- lexical-binding: t -*-
#+end_src

#+begin_src elisp
;; This config is autogenerated. See config.org. ;;
#+end_src

* Personal Information
** Name and email
Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets.
#+BEGIN_SRC elisp
(setq user-full-name "Christoffer Arvidsson"
      user-mail-address "christoffer@arvidson.nu")
#+END_SRC

** Mail
#+include: "~/.doom.d/+mail.org"

* UI
** Theme
There are two ways to load a theme. Both assume the theme is installed and
available. You can either set `doom-theme' or manually load a theme with the
`load-theme' function. Here we set the doom-horizon theme.

#+begin_src elisp
(use-package! doom-themes
  :config
  ;; Global settings (defaults)

  (setq doom-themes-enable-bold t      ; if nil, bold is universally disabled
        doom-themes-enable-italic t)   ; if nil, italics is universally disabled

  ;; Treemacs
  (setq doom-themes-treemacs-theme "doom-colors")
  (setq doom-theme 'doom-horizon)
  (setq doom-horizon-brighter-comments t)
  (doom-themes-treemacs-config)

  ;; Corrects (and improves) org-mode's native fontification.
  (doom-themes-org-config)

  )
#+end_src

The following changes the color of org mode blocks (src, example, quote etc.) to
be more obvious by darkening them.
#+begin_src elisp
(after! org
  (after! doom-themes
    (set-face-background 'org-block (doom-darken 'bg 0.15))
    (set-face-background 'org-block-begin-line (doom-darken 'bg 0.15))
  )
)
#+end_src

** Font
Iosevka and overpass fonts.

#+begin_src elisp
(setq doom-font (font-spec :family "iosevka" :size 14))
#+end_src

* Editor
** Keyboard
#+include: "~/.doom.d/+keyboard.org"
** Line numbers
Relative line numbers allows using relational vim bindings, ie. =10k= to move 10 lines up, for example. Enable this to get better at using them.

#+begin_src elisp
(setq display-line-numbers-type 'relative)
#+end_src

** Completion
Completion settings.
#+begin_src elisp
(require 'company)
(setq company-idle-delay 0.0
      company-minimum-prefix-length 1)
#+end_src

** Expand region
[[https://github.com/magnars/expand-region.el][Expand region]] allows pressing =<leader> v v v v v...= repeatedly to expand the
visual mode from current point. For example, if your cursor is within the curly
brackets, you can select everything within the parenthesis in =(Hello my name is
{name})= by pressing =leader v v v=.
#+begin_src elisp
(map! :leader "v" 'er/expand-region)
#+end_src

** Line endings
Convert line endings to unix
#+begin_src elisp
(defun no-junk-please-were-unixish ()
  (let ((coding-str (symbol-name buffer-file-coding-system)))
    (when (string-match "-\\(?:dos\\|mac\\)$" coding-str)
      (set-buffer-file-coding-system 'unix))))

(add-hook 'find-file-hooks 'no-junk-please-were-unixish)
#+end_src
* Mode config
** Org-mode
#+include: "~/.doom.d/+org.org"
** PDF-tools
#+begin_src elisp
(after! pdf-tools
  (add-hook 'pdf-view-mode-hook 'auto-revert-mode))
#+end_src
** Magit
Bring back the sidebuffer for magit.
#+begin_src elisp
(set-popup-rule! "\\^*magit" :side 'right :width 0.4)
#+end_src

** Python
Configure python
#+begin_src elisp
(setq python-shell-interpreter "~/.pyenv/shims/python")
(map! :map python-mode-map
      :localleader
      "c" 'python-shell-send-buffer
      "r" 'run-python)
#+end_src

** Eshell
#+begin_src elisp
(after! eshell
  (setq eshell-term-name "kitty")
)
#+end_src
* Bindings
Collection of nice bindings I use throughout the emacs journey.
#+BEGIN_SRC elisp
(map! :leader
      "TAB" 'evil-switch-to-windows-last-buffer ; Switch to last buffer
      "f w" 'find-file-other-window
      "o c" 'quick-calc
      "o C" 'calc
      "i p" 'academic-phrases
      "i P" 'academic-phrases-by-section)
#+END_SRC
